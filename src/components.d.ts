/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';


import {
  ButtonVariant,
} from './models/button-variant';
import {
  MatInputVariant,
} from './models/mat-input-variant';


export namespace Components {

  interface MatButton {
    'variant': ButtonVariant;
  }
  interface MatButtonAttributes extends StencilHTMLAttributes {
    'variant'?: ButtonVariant;
  }

  interface MatCardActions {}
  interface MatCardActionsAttributes extends StencilHTMLAttributes {}

  interface MatCardBody {
    'mediaScale': 'square' | '16-9';
    'mediaUrl': string;
    'subtitle': string;
    'title': string;
  }
  interface MatCardBodyAttributes extends StencilHTMLAttributes {
    'mediaScale'?: 'square' | '16-9';
    'mediaUrl'?: string;
    'subtitle'?: string;
    'title'?: string;
  }

  interface MatCard {
    'variant': 'outlined' | 'basic';
  }
  interface MatCardAttributes extends StencilHTMLAttributes {
    'variant'?: 'outlined' | 'basic';
  }

  interface MatCheckbox {
    'checked'?: 'on' | 'off' | 1 | 0;
  }
  interface MatCheckboxAttributes extends StencilHTMLAttributes {
    'checked'?: 'on' | 'off' | 1 | 0;
  }

  interface MatIconButton {
    'ariaLabel': string;
    'icon': string;
    'toggle'?: boolean;
  }
  interface MatIconButtonAttributes extends StencilHTMLAttributes {
    'ariaLabel'?: string;
    'icon'?: string;
    'toggle'?: boolean;
  }

  interface MatIcon {}
  interface MatIconAttributes extends StencilHTMLAttributes {}

  interface MatInput {
    'hint': string;
    'placeholder': string;
    'variant': MatInputVariant;
  }
  interface MatInputAttributes extends StencilHTMLAttributes {
    'hint'?: string;
    'placeholder'?: string;
    'variant'?: MatInputVariant;
  }
}

declare global {
  interface StencilElementInterfaces {
    'MatButton': Components.MatButton;
    'MatCardActions': Components.MatCardActions;
    'MatCardBody': Components.MatCardBody;
    'MatCard': Components.MatCard;
    'MatCheckbox': Components.MatCheckbox;
    'MatIconButton': Components.MatIconButton;
    'MatIcon': Components.MatIcon;
    'MatInput': Components.MatInput;
  }

  interface StencilIntrinsicElements {
    'mat-button': Components.MatButtonAttributes;
    'mat-card-actions': Components.MatCardActionsAttributes;
    'mat-card-body': Components.MatCardBodyAttributes;
    'mat-card': Components.MatCardAttributes;
    'mat-checkbox': Components.MatCheckboxAttributes;
    'mat-icon-button': Components.MatIconButtonAttributes;
    'mat-icon': Components.MatIconAttributes;
    'mat-input': Components.MatInputAttributes;
  }


  interface HTMLMatButtonElement extends Components.MatButton, HTMLStencilElement {}
  var HTMLMatButtonElement: {
    prototype: HTMLMatButtonElement;
    new (): HTMLMatButtonElement;
  };

  interface HTMLMatCardActionsElement extends Components.MatCardActions, HTMLStencilElement {}
  var HTMLMatCardActionsElement: {
    prototype: HTMLMatCardActionsElement;
    new (): HTMLMatCardActionsElement;
  };

  interface HTMLMatCardBodyElement extends Components.MatCardBody, HTMLStencilElement {}
  var HTMLMatCardBodyElement: {
    prototype: HTMLMatCardBodyElement;
    new (): HTMLMatCardBodyElement;
  };

  interface HTMLMatCardElement extends Components.MatCard, HTMLStencilElement {}
  var HTMLMatCardElement: {
    prototype: HTMLMatCardElement;
    new (): HTMLMatCardElement;
  };

  interface HTMLMatCheckboxElement extends Components.MatCheckbox, HTMLStencilElement {}
  var HTMLMatCheckboxElement: {
    prototype: HTMLMatCheckboxElement;
    new (): HTMLMatCheckboxElement;
  };

  interface HTMLMatIconButtonElement extends Components.MatIconButton, HTMLStencilElement {}
  var HTMLMatIconButtonElement: {
    prototype: HTMLMatIconButtonElement;
    new (): HTMLMatIconButtonElement;
  };

  interface HTMLMatIconElement extends Components.MatIcon, HTMLStencilElement {}
  var HTMLMatIconElement: {
    prototype: HTMLMatIconElement;
    new (): HTMLMatIconElement;
  };

  interface HTMLMatInputElement extends Components.MatInput, HTMLStencilElement {}
  var HTMLMatInputElement: {
    prototype: HTMLMatInputElement;
    new (): HTMLMatInputElement;
  };

  interface HTMLElementTagNameMap {
    'mat-button': HTMLMatButtonElement
    'mat-card-actions': HTMLMatCardActionsElement
    'mat-card-body': HTMLMatCardBodyElement
    'mat-card': HTMLMatCardElement
    'mat-checkbox': HTMLMatCheckboxElement
    'mat-icon-button': HTMLMatIconButtonElement
    'mat-icon': HTMLMatIconElement
    'mat-input': HTMLMatInputElement
  }

  interface ElementTagNameMap {
    'mat-button': HTMLMatButtonElement;
    'mat-card-actions': HTMLMatCardActionsElement;
    'mat-card-body': HTMLMatCardBodyElement;
    'mat-card': HTMLMatCardElement;
    'mat-checkbox': HTMLMatCheckboxElement;
    'mat-icon-button': HTMLMatIconButtonElement;
    'mat-icon': HTMLMatIconElement;
    'mat-input': HTMLMatInputElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
